"use client";
import { useEffect } from "react";
import Head from "next/head";
import dynamic from "next/dynamic";
import prisma from "../../lib/prisma";
import usePollState from "../../store/poll-state.store";
import MainLayout from "../../components/Layouts/main-layout";

// lazy imports
const PollLayout = dynamic(
  () => import("../../components/Layouts/poll-layout"),
  { ssr: false }
);
const PollUser = dynamic(
  () => import("../../components/PollCard/poll-user"),
  {}
);

export async function getStaticPaths() {
  try {
    // Return a list of possible value for id
    const polls = await prisma.poll.findMany({ select: { id: true } });

    // // Map through all polls to get each ID
    const paths = polls.map((poll) => ({
      params: {
        id: poll.id.toString(),
      },
    }));

    return {
      paths,
      fallback: false,
    };
  } catch (error) {
    console.log(error);
  }
}

export async function getStaticProps({ params }) {
  const poll = await prisma.poll.findFirst({
    where: { id: Number(params.id) },
    include: {
      questions: true,
    },
  });

  return {
    props: {
      poll: {
        ...poll,
        startDate: poll.startDate.toJSON(),
        endDate: poll.endDate.toJSON(),
      },
    },
  };
}

const Poll = ({ poll }) => {
  useEffect(() => {
    usePollState.setState({
      settings: {
        hideVotes: poll.hideVotes,
        startDate: new Date(poll.startDate).getTime(),
        endDate: new Date(poll.endDate).getTime(),
      },
      colorScheme: poll.colorScheme,
      pollTitle: poll.title,
      background: poll.backgroundURL,
      options: [...poll.questions],
      pollId: poll.id,
    });
  }, []);

  return (
    <>
      <Head>
        <title>Consensays</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainLayout backgroundURL={poll.backgroundURL}>
        <PollLayout>
          <PollUser />
        </PollLayout>
      </MainLayout>
    </>
  );
};

export default Poll;
